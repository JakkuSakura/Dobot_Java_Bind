package dobotdll;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * WIFI related<br>
 * <i>native declaration : line 341</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class WIFIIPAddress extends Structure {
	public byte dhcp;
	/** C type : uint8_t[4] */
	public byte[] addr = new byte[4];
	public WIFIIPAddress() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("dhcp", "addr");
	}
	/** @param addr C type : uint8_t[4] */
	public WIFIIPAddress(byte dhcp, byte addr[]) {
		super();
		this.dhcp = dhcp;
		if ((addr.length != this.addr.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.addr = addr;
	}
	public WIFIIPAddress(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends WIFIIPAddress implements Structure.ByReference {
		
	};
	public static class ByValue extends WIFIIPAddress implements Structure.ByValue {
		
	};
}
