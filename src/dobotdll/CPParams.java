package dobotdll;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * CP related<br>
 * <i>native declaration : line 185</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CPParams extends Structure {
	public float planAcc;
	public float juncitionVel;
	/** C type : field1_union */
	public field1_union field1;
	public byte realTimeTrack;
	/** <i>native declaration : line 189</i> */
	public static class field1_union extends Union {
		public float acc;
		public float period;
		public field1_union() {
			super();
		}
		public field1_union(float acc_or_period) {
			super();
			this.period = this.acc = acc_or_period;
			setType(Float.TYPE);
		}
		public field1_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends field1_union implements Structure.ByReference {
			
		};
		public static class ByValue extends field1_union implements Structure.ByValue {
			
		};
	};
	public CPParams() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("planAcc", "juncitionVel", "field1", "realTimeTrack");
	}
	/** @param field1 C type : field1_union */
	public CPParams(float planAcc, float juncitionVel, field1_union field1, byte realTimeTrack) {
		super();
		this.planAcc = planAcc;
		this.juncitionVel = juncitionVel;
		this.field1 = field1;
		this.realTimeTrack = realTimeTrack;
	}
	public CPParams(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CPParams implements Structure.ByReference {
		
	};
	public static class ByValue extends CPParams implements Structure.ByValue {
		
	};
}
